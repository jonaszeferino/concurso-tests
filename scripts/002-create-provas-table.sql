-- Create the prova table
create table if not exists public.prova (
    id bigint generated by default as identity primary key,
    titulo text not null,
    concurso_id bigint not null references public.concurso(id),
    disciplina_id bigint not null references public.disciplina(id),
    cargo_id bigint not null references public.cargo(id),
    data_prova timestamp with time zone not null,
    descricao text,
    nivel_dificuldade text not null check (nivel_dificuldade in ('facil', 'medio', 'dificil')),
    tempo_limite integer not null check (tempo_limite > 0),
    numero_questoes integer not null check (numero_questoes > 0),
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Set up Row Level Security (RLS)
alter table public.prova enable row level security;

-- Create indexes
create index if not exists prova_concurso_id_idx on public.prova(concurso_id);
create index if not exists prova_disciplina_id_idx on public.prova(disciplina_id);
create index if not exists prova_cargo_id_idx on public.prova(cargo_id);
create index if not exists prova_data_prova_idx on public.prova(data_prova);

-- Create policies
create policy "Enable read access for all users" on public.prova
    for select using (true);

create policy "Enable insert for authenticated users only" on public.prova
    for insert with check (auth.role() = 'authenticated');

create policy "Enable update for authenticated users only" on public.prova
    for update using (auth.role() = 'authenticated');

create policy "Enable delete for authenticated users only" on public.prova
    for delete using (auth.role() = 'authenticated');

-- Create function to update updated_at
create or replace function public.handle_updated_at()
returns trigger as $$
begin
    new.updated_at = timezone('utc'::text, now());
    return new;
end;
$$ language plpgsql;

-- Create trigger for updated_at
create trigger handle_prova_updated_at
    before update on public.prova
    for each row
    execute function public.handle_updated_at();

-- Comentários nas colunas para documentação
COMMENT ON TABLE prova IS 'Tabela que armazena as provas dos concursos';
COMMENT ON COLUMN prova.id IS 'Identificador único da prova';
COMMENT ON COLUMN prova.titulo IS 'Título da prova';
COMMENT ON COLUMN prova.concurso_id IS 'Referência ao concurso ao qual a prova pertence';
COMMENT ON COLUMN prova.disciplina_id IS 'Referência à disciplina da prova';
COMMENT ON COLUMN prova.cargo_id IS 'Referência ao cargo para o qual a prova é destinada';
COMMENT ON COLUMN prova.data_prova IS 'Data e hora em que a prova será realizada';
COMMENT ON COLUMN prova.descricao IS 'Descrição detalhada da prova';
COMMENT ON COLUMN prova.nivel_dificuldade IS 'Nível de dificuldade da prova (facil, medio, dificil)';
COMMENT ON COLUMN prova.tempo_limite IS 'Tempo limite em minutos para realização da prova';
COMMENT ON COLUMN prova.numero_questoes IS 'Número total de questões da prova';
COMMENT ON COLUMN prova.created_at IS 'Data e hora de criação do registro';
COMMENT ON COLUMN prova.updated_at IS 'Data e hora da última atualização do registro'; 